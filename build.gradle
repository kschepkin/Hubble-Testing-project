buildscript {
    ext {
        jUnit5Version = '5.5.2'
        selenideVersion='5.4.0'
        webDriverManagerVersion = '3.6.2'
        restAssuredVersion = '4.0.0'
        galenVersion = '2.4.4'
    }
}

plugins {
    id 'io.qameta.allure' version '2.5'
    id 'java'
    id "org.sonarqube" version "2.5"
}

allure {
    autoconfigure = true
    version = '2.13.0'
    aspectjweaver = true
    boolean clean = true
    resultsDir = file('allure-results')
    reportDir = file('allure-report')
    String configuration = 'testCompile'
    useJUnit5 {
        version = '2.13.0'
    }
    downloadLink = 'https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.7.0/allure-2.7.0.zip'
}

group 'Hubble-testing-project'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    compile "org.junit.jupiter:junit-jupiter:${jUnit5Version}"
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    compile group: 'io.qameta.allure', name: 'allure-selenide', version: '2.12.1'
    testRuntime 'org.junit.platform:junit-platform-launcher:1.4.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-lgpl', version: '1.9.13'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'io.rest-assured', name: 'rest-assured', version: "${restAssuredVersion}"
    compile group: 'com.galenframework', name: 'galen-core', version: "${galenVersion}"
    compile group: 'com.galenframework', name: 'galen-java-support', version: "${galenVersion}"
    compile "io.github.bonigarcia:webdrivermanager:${webDriverManagerVersion}"
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    compile "com.codeborne:selenide:${selenideVersion}"
    compile 'com.google.guava:guava:28.0-jre'
    compile 'io.github.artsok:rerunner-jupiter:2.1.3'
    implementation 'com.github.appium:java-client:master-SNAPSHOT'
    compile group: 'com.codeborne', name: 'selenide-appium', version: '1.3'
    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.5.2'
    )
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.5.2'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.5.2',
            'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    )
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}

defaultTasks 'clean','cleanTest'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

test {
    maxParallelForks = 1
    ignoreFailures = true
    jvmArgs += "-Dlog4j.configurationFile=src/test/resources/log4j2.xml"
//    jvmArgs += "-Dselenide.browser=controllers.CustomDriverProvider"
    if (env) {
        jvmArgs += "-Dsettings.env=${env}"
    }
    if (browser) {
        jvmArgs += "-Dbrowser=${browser}"
    }
    if (devicePlatform) {
        jvmArgs += "-Dsettings.devicePlatform=${devicePlatform}"
    }
    if (checkEmail) {
        jvmArgs += "-Dsettings.checkEmail=${checkEmail}"
    }
    useJUnitPlatform()
}

allprojects { project ->
    apply plugin: 'io.qameta.allure'
    allure {
        version = '2.7.0'
    }
}

task copyConfig(type: Copy) {
    from "src/test/resources/${env}/environment.properties"
    into 'build/reports/allure-results'
}

ext.AllureReport = io.qameta.allure.gradle.task.AllureReport.class
task allureAggregatedReport(type: AllureReport) {
    resultsDirs = subprojects.allure.resultsDir
    resultsDirs.add(file('build/reports/allure-results'))
}